<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.samton.web.manage.finance.dao.TCustAccountReturnMapper" >
  <resultMap id="BaseResultMap" type="com.samton.web.manage.finance.bean.entity.TCustAccountReturn" >
    <id column="return_id" property="returnId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="return_money" property="returnMoney" jdbcType="NUMERIC" />
    <result column="before_return_money" property="beforeReturnMoney" jdbcType="NUMERIC" />
    <result column="after_return_money" property="afterReturnMoney" jdbcType="NUMERIC" />
    <result column="return_time" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    return_id, account_id, cust_id, return_money, before_return_money, after_return_money, 
    return_time, remark, create_user_id, create_date, modify_user_id, modify_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public.t_cust_account_return
    where return_id = #{returnId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public.t_cust_account_return
    where return_id = #{returnId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.samton.web.manage.finance.bean.entity.TCustAccountReturn" >
    insert into public.t_cust_account_return (return_id, account_id, cust_id, 
      return_money, before_return_money, after_return_money, 
      return_time, remark, create_user_id, 
      create_date, modify_user_id, modify_date
      )
    values (#{returnId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, 
      #{returnMoney,jdbcType=NUMERIC}, #{beforeReturnMoney,jdbcType=NUMERIC}, #{afterReturnMoney,jdbcType=NUMERIC}, 
      #{returnTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=BIGINT}, #{modifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.samton.web.manage.finance.bean.entity.TCustAccountReturn" >
    insert into public.t_cust_account_return
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="returnId != null" >
        return_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="returnMoney != null" >
        return_money,
      </if>
      <if test="beforeReturnMoney != null" >
        before_return_money,
      </if>
      <if test="afterReturnMoney != null" >
        after_return_money,
      </if>
      <if test="returnTime != null" >
        return_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="returnId != null" >
        #{returnId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="returnMoney != null" >
        #{returnMoney,jdbcType=NUMERIC},
      </if>
      <if test="beforeReturnMoney != null" >
        #{beforeReturnMoney,jdbcType=NUMERIC},
      </if>
      <if test="afterReturnMoney != null" >
        #{afterReturnMoney,jdbcType=NUMERIC},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.samton.web.manage.finance.bean.entity.TCustAccountReturn" >
    update public.t_cust_account_return
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="returnMoney != null" >
        return_money = #{returnMoney,jdbcType=NUMERIC},
      </if>
      <if test="beforeReturnMoney != null" >
        before_return_money = #{beforeReturnMoney,jdbcType=NUMERIC},
      </if>
      <if test="afterReturnMoney != null" >
        after_return_money = #{afterReturnMoney,jdbcType=NUMERIC},
      </if>
      <if test="returnTime != null" >
        return_time = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where return_id = #{returnId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.samton.web.manage.finance.bean.entity.TCustAccountReturn" >
    update public.t_cust_account_return
    set account_id = #{accountId,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=INTEGER},
      return_money = #{returnMoney,jdbcType=NUMERIC},
      before_return_money = #{beforeReturnMoney,jdbcType=NUMERIC},
      after_return_money = #{afterReturnMoney,jdbcType=NUMERIC},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where return_id = #{returnId,jdbcType=INTEGER}
  </update>

  <sql id="Base_Column_List_Vo" >
    r.return_id, r.account_id, r.cust_id, r.return_money, r.before_return_money, r.after_return_money,
    r.return_time, r.remark, r.create_user_id, r.create_date, r.modify_user_id, r.modify_date
  </sql>

  <sql id="queryPageList_where">
    <if test="search != null">
      <if test="search.custName != null and search.custName != ''">
        and tc.cust_name like '%'||#{search.custName,jdbcType=VARCHAR}||'%'
      </if>
      <if test="search.companyName != null and search.companyName != ''">
        and tc.company_name like '%'||#{search.companyName,jdbcType=VARCHAR}||'%'
      </if>
      <if test="search.returnTimeBegin != null">
        <![CDATA[ and r.return_time >= #{search.returnTimeBegin,jdbcType=TIMESTAMP} ]]>
      </if>
      <if test="search.returnTimeEnd != null">
        <![CDATA[ and r.return_time <= #{search.returnTimeEnd,jdbcType=TIMESTAMP} ]]>
      </if>
    </if>
  </sql>
  <!-- 客户授信记录分页查询 -->
  <select id="queryPageReturnList" parameterType="com.samton.platform.framework.mybatis.pagination.Pagination" resultType="com.samton.web.manage.finance.bean.vo.CustAccountReturnVo">
    SELECT <include refid="Base_Column_List_Vo" />,
    tc.cust_code,
    tc.cust_name,
    tc.company_name
    FROM
    t_cust_account_return r
    INNER JOIN t_customer tc ON r.cust_id = tc.cust_id
    <where>
      <include refid="queryPageList_where" />
    </where>
  </select>

  <!-- 客户授信记录页面导出 -->
  <select id="exportReturnInfoList" parameterType="com.samton.platform.framework.mybatis.pagination.Pagination" resultType="java.util.Map">
    SELECT <include refid="Base_Column_List_Vo" />,
    tc.cust_code,
    tc.cust_name,
    tc.company_name
    FROM
    t_cust_account_return r
    INNER JOIN t_customer tc ON r.cust_id = tc.cust_id
    <where>
      <include refid="queryPageList_where" />
    </where>
  </select>

  <!-- 客户授信记录查看-->
  <select id="selectReturnVoById" parameterType="java.lang.Integer" resultType="com.samton.web.manage.finance.bean.vo.CustAccountReturnVo">
    select
    <include refid="Base_Column_List_Vo"/>,
    tc.cust_code,
    tc.cust_name,
    a.dollar_rate,
    tc.company_name
    from t_cust_account_return r
    INNER join t_cust_account a on r.cust_id = a.cust_id
    INNER join t_customer tc on r.cust_id = tc.cust_id
    where r.cust_id = #{custId,jdbcType=INTEGER}
  </select>
</mapper>