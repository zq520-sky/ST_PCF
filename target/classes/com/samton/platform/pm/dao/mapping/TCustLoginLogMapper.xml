<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.samton.platform.pm.dao.TCustLoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.samton.platform.pm.bean.entity.TCustLoginLog" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="BIGINT" />
    <result column="login_date" property="loginDate" jdbcType="TIMESTAMP" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_type" property="loginType" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, cust_id, login_date, login_ip, login_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public.t_cust_login_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public.t_cust_login_log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.samton.platform.pm.bean.entity.TCustLoginLog" >
    insert into public.t_cust_login_log (log_id, cust_id, login_date, 
      login_ip, login_type)
    values (#{logId,jdbcType=INTEGER}, #{custId,jdbcType=BIGINT}, #{loginDate,jdbcType=TIMESTAMP}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginType,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.samton.platform.pm.bean.entity.TCustLoginLog" >
    insert into public.t_cust_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="loginDate != null" >
        login_date,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginType != null" >
        login_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=BIGINT},
      </if>
      <if test="loginDate != null" >
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        #{loginType,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.samton.platform.pm.bean.entity.TCustLoginLog" >
    update public.t_cust_login_log
    <set >
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=BIGINT},
      </if>
      <if test="loginDate != null" >
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginType != null" >
        login_type = #{loginType,jdbcType=SMALLINT},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.samton.platform.pm.bean.entity.TCustLoginLog" >
    update public.t_cust_login_log
    set cust_id = #{custId,jdbcType=BIGINT},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_type = #{loginType,jdbcType=SMALLINT}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <!-- 分页查询where条件 -->
  <sql id="queryPageList_where">
    <if test="search != null">
      <if test="search.custCode != null and search.custCode != ''">
        and tc.cust_code like '%'||#{search.custCode,jdbcType=VARCHAR}||'%'
      </if>
      <if test="search.wechatName != null and search.wechatName != ''">
        and tc.wechat_name like '%'||#{search.wechatName,jdbcType=VARCHAR}||'%'
      </if>
      <if test="search.loginType != null">
        and tcll.login_type = #{search.loginType,jdbcType=SMALLINT}
      </if>
    </if>
  </sql>
  <!-- 分页查询 -->
  <select id="queryPageList" parameterType="com.samton.platform.framework.mybatis.pagination.Pagination" resultType="com.samton.platform.pm.bean.vo.TCustLoginLogVo">
    select
    tcll.log_id,tcll.login_date,tcll.login_ip,tcll.login_type,
    tc.cust_code,tc.wechat_name,tc.wechat_code,tc.mobile,tcll.cust_id,
    case when tcll.login_type=1 then '手机号' when tcll.login_type=2 then '微信' end as type

    from t_cust_login_log tcll
    left join t_customer tc on tcll.cust_id = tc.cust_id
    <where>
      <include refid="queryPageList_where" />
    </where>
    order by tcll.login_date DESC
  </select>

  <!-- 页面导出 -->
  <select id="exportPageList" parameterType="com.samton.platform.framework.mybatis.pagination.Pagination" resultType="java.util.Map">
    select
    tcll.log_id,tcll.login_date,tcll.login_ip,tcll.login_type,
    tc.cust_code,tc.wechat_name,tc.wechat_code,tc.mobile,tcll.cust_id,
    case when tcll.login_type=1 then '手机号' when tcll.login_type=2 then '微信' end as type
    from t_cust_login_log tcll
    left join t_customer tc on tcll.cust_id = tc.cust_id
    <where>
      <include refid="queryPageList_where" />
    </where>
    order by tcll.login_date DESC
  </select>
  <select id="selectCustLoginLogById" parameterType="java.lang.Integer" resultType="com.samton.platform.pm.bean.vo.TCustLoginLogVo">
    select
   tcll.log_id,tcll.login_date,tcll.login_ip,tcll.login_type,
    tc.cust_code,tc.wechat_name,tc.wechat_code,tc.mobile,tcll.cust_id,
     case when tcll.login_type=1 then '手机号' when tcll.login_type=2 then '微信' end as type
    from t_cust_login_log tcll
    left join t_customer tc on tcll.cust_id = tc.cust_id
    where tcll.log_id = #{logId,jdbcType=INTEGER}
  </select>
</mapper>